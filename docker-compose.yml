version: '3.8'

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transaction_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: 
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    volumes:
      - ./init-kafka.sh:/docker-entrypoint-initdb.d/init-kafka.sh
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  transaction-service:
    build:
      context: .
      dockerfile: src/TransactionService/Presentation/TransactionService.Api/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - KAFKA_BROKER=kafka:29092
      - KAFKA_TRANSACTION_TOPIC=transaction-topic
      - KAFKA_STATUS_TOPIC=transaction-status
      - CONNECTION_STRING=Host=postgres;Port=5432;Database=transaction_db;Username=postgres;Password=postgres
      - KAFKA_CONSUMER_REQUEST_TIMEOUT_MS=30000
    ports:
      - "5001:80"

  anti-fraud-service:
    build:
      context: .
      dockerfile: src/AntiFraudService/Presentation/AntiFraudService.Api/Dockerfile
    depends_on:
      transaction-service:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - KAFKA_BROKER=kafka:29092
      - KAFKA_TRANSACTION_TOPIC=transaction-topic
      - KAFKA_STATUS_TOPIC=transaction-status
    ports:
      - "5002:80"

volumes:
  postgres_data:
